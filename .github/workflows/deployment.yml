name: Deployment

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  CI: true
  FORCE_COLOR: true
  DOCKER_BUILDKIT: 1
  BUILDKIT_INLINE_CACHE: 1

jobs:
  dockerhub:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://hub.docker.com/repository/docker/${{ github.repository }}
    steps:
      - uses: actions/checkout@v3
      - name: Install the cosign tool
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.11.0'
      - name: Setup Docker buildx (Workaround) Â· https://github.com/docker/build-push-action/issues/461
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
      - name: Log into DockerHub registry
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ github.repository }}:latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image with Buildx
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository }}:latest
            ${{ github.repository }}:ncc-1701
            ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            org.opencontainers.image.source=https://hub.docker.com/repository/docker/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.
      # If you would like to publish transparency data even for private images,
      # pass --force to cosign below. https://github.com/sigstore/cosign
      - name: Sign the resulting Docker image digest
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
